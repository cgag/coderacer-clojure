@(do (defun 100-doors ()
       (let ((doors (vector 100)))
         (each ((i (range 0 99)))
           (for ((j i)) ((< j 100)) ((inc j (+ i 1)))
             (flip [doors j])))
         doors))
     (each ((counter (range 1))
            (door (list-vector (100-doors))))
        (format t "door ~a is ~a\n" counter (if door "open" "closed"))))