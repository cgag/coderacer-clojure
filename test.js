// Generated by CoffeeScript 1.3.3
(function() {
  var codeHtml, codeJoin, codeSamples, codeSplit, j, preEscape, wrapCode;

  codeHtml = function(json) {
    return json["query"]["pages"]["1514"]["revisions"][0]["*"];
  };

  codeSamples = function(html) {
    var arr, codeReg, samples;
    codeReg = /<lang.*?>([.\s\S]*?)<\/lang>/g;
    samples = [];
    while ((arr = codeReg.exec(html))) {
      samples.push(arr[1]);
    }
    return samples;
  };

  j = function(s) {
    return JSON.stringify(s);
  };

  codeSplit = function(code) {
    var char, token, tokens, _i, _len;
    tokens = [];
    token = "";
    for (_i = 0, _len = code.length; _i < _len; _i++) {
      char = code[_i];
      if (char === " ") {
        if (token.length === 0 || token[token.length - 1] === " ") {
          token = token.concat(" ");
        } else {
          tokens.push(token);
          token = "";
        }
      } else if (char === "\n") {
        token = token.concat(char);
        tokens.push(token);
        token = "";
      } else {
        token = token.concat(char);
      }
    }
    tokens.push(token);
    return tokens;
  };

  codeJoin = function(splitCode) {
    var output, token, _i, _len;
    output = "";
    for (_i = 0, _len = splitCode.length; _i < _len; _i++) {
      token = splitCode[_i];
      console.log("Token:" + token);
      if (token[token.length - 1] !== "\n") {
        output += token + " ";
        console.log("outout:" + output);
      } else {
        output += token;
      }
    }
    return output;
  };

  wrapCode = function(code) {
    var i, output, splitCode, token, _i, _len;
    splitCode = codeSplit(code);
    output = "";
    for (i = _i = 0, _len = splitCode.length; _i < _len; i = ++_i) {
      token = splitCode[i];
      console.log("Token:" + token);
      if (token[token.length - 1] !== "\n") {
        output += ("<span id=\"token-" + i + "\">") + token + " " + "</span>";
        console.log("outout:" + output);
      } else {
        output += ("<span id=\"token-" + i + "\">") + token + "</span>";
      }
    }
    return output;
  };

  preEscape = function(preCode) {
    var char, output, _i, _len;
    output = "";
    for (_i = 0, _len = preCode.length; _i < _len; _i++) {
      char = preCode[_i];
      if (char === "<") {
        output = output.concat("&lt;");
      } else if (char === ">") {
        output = output.concat("&gt;");
      } else if (char === "&") {
        output = output.concat("&amp;");
      } else {
        output = output.concat(char);
      }
    }
    return output;
  };

  jQuery(function() {
    var currentToken, handleInput, html, resp, sample, setMatch, setMiss, tokens, wordSoFar;
    resp = {
      "query": {
        "pages": {
          "1514": {
            "pageid": 1514,
            "ns": 0,
            "title": "Hello world\/Text",
            "revisions": [
              {
                "*": "=={{header|C}}==\n{{works with|gcc|4.0.1}}\n<lang c>#include <stdlib.h>\n#include <stdio.h>\n\nint main(void)\n{\n  printf(\"Goodbye, World!\\n\");\n  return EXIT_SUCCESS;\n}<\/lang>\nOr:\n<lang c>#include <stdlib.h>\n#include <stdio.h>\n\nint main(void)\n{\n  puts(\"Goodbye, World!\");\n  return EXIT_SUCCESS;\n}<\/lang>"
              }
            ]
          }
        }
      },
      "query-continue": {
        "revisions": {
          "rvstartid": 137809
        }
      }
    };
    html = codeHtml(resp);
    $("body").append("<pre>" + html + "</pre>");
    sample = codeSamples(html)[0];
    console.log(sample);
    tokens = codeSplit(sample);
    $("#target-text").append("<pre>" + wrapCode(sample) + "</pre>");
    wordSoFar = "";
    currentToken = 0;
    $("#token-" + currentToken).addClass("current");
    $("#token-" + currentToken).addClass("match");
    setMatch = function() {
      $("#token-" + currentToken).addClass("match");
      return $("#token-" + currentToken).removeClass("miss");
    };
    setMiss = function() {
      $("#token-" + currentToken).addClass("miss");
      return $("#token-" + currentToken).removeClass("match");
    };
    handleInput = function(e) {
      if (e.which === 8 && wordSoFar.length > 0) {
        wordSoFar = wordSoFar.slice(0, wordSoFar.length - 1);
      } else if (e.type === "keypress") {
        wordSoFar = wordSoFar.concat(String.fromCharCode(e.which));
      }
      if (tokens[currentToken].slice(0, wordSoFar.length) === wordSoFar) {
        setMatch();
      } else {
        setMiss();
      }
      $("#entered-word").text("entered: " + wordSoFar + "\n");
      return $("#target-word").text("target: " + tokens[currentToken] + "\n");
    };
    $("#typing-area").keypress(handleInput);
    $("#typing-area").keydown(handleInput);
    console.log(tokens);
    $("body").append("=====<br /><pre>" + escape(codeJoin(tokens)) + "</pre>");
    $("body").append("=====<br /><pre>" + preEscape(codeJoin(tokens)) + "</pre>");
    return console.log(wrapCode(sample));
  });

}).call(this);
